#!/usr/bin/env python

import argparse
import sys
from kaleidoscope import kaleido

class KalScript(object):

    def __init__(self):
        parser = argparse.ArgumentParser(
            description='Android Project Publish Tool',
            usage='''kal <command> <args>

The most commonly used commands are:
   install    Install your project workflow description file
   start      Start a pre-installed workflow
''')
        parser.add_argument('command', help='Subcommand to run')
        # parse_args defaults to [1:] for args, but you need to
        # exclude the rest of the args too, or validation will fail
        args = parser.parse_args(sys.argv[1:2])
        if not hasattr(self, args.command):
            print 'Unrecognized command'
            parser.print_help()
            exit(1)

        # use dispatch pattern to invoke method with same name
        getattr(self, args.command)()

    def reset(self):
        print 'Remove installed workflows'
        kaleido.reset()

    def install(self):
        parser = argparse.ArgumentParser(
            description='Install your project workflow description file')

        parser.add_argument('yaml_file', help='workflow file location')
        args = parser.parse_args(sys.argv[2:])

        print 'Running kal install, yaml_file=%s' % args.yaml_file

        kaleido.install(args.yaml_file)

    def start(self):
        parser = argparse.ArgumentParser(
            description='Start a pre-installed workflow')

        parser.add_argument('workflow_name', help='a workflow to execute')
        parser.add_argument('--continue', action='store_true', help='contine last uncomplete workflow')
        args = parser.parse_args(sys.argv[2:])

        is_continue = args.__dict__.get('continue') 
        print 'Running kal start, workflow_name=%s, continue=%r' % (args.workflow_name, is_continue)

        kaleido.start(args.workflow_name, is_continue)


if __name__ == '__main__':
    KalScript()